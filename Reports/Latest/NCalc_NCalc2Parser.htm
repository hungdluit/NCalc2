<!DOCTYPE html>
<html data-ng-app="coverageApp">
<head>
<meta charset="utf-8" />
<title>NCalc2.NCalc2Parser - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
</head><body data-ng-controller="DetailViewCtrl"><div class="container">
<h1>Summary</h1>
<table class="overview">
<colgroup>
<col style="width: 135px;" />
<col />
</colgroup>
<tbody>
<tr><th>Class:</th><td>NCalc2.NCalc2Parser</td></tr>
<tr><th>Assembly:</th><td>NCalc</td></tr>
<tr><th>File(s):</th><td><a href="#cUsersphmarquesDocumentsGitHubNCalc2EvaluantCalculatorobjDebugNCalc2Parsercs">c:\Users\phmarques\Documents\GitHub\NCalc2\Evaluant.Calculator\obj\Debug\NCalc2Parser.cs</a></td></tr>
<tr><th>Covered lines:</th><td>1014</td></tr>
<tr><th>Uncovered lines:</th><td>517</td></tr>
<tr><th>Coverable lines:</th><td>1531</td></tr>
<tr><th>Total lines:</th><td>1849</td></tr>
<tr><th>Line Coverage:</th><td>66.2%</td></tr>
<tr><th>Branch coverage:</th><td>41.7%</td></tr>
</tbody>
</table>
<h1>History</h1>
<div id="chart0fae05302b02422383ca0f6230103a15" class="ct-chart" data-history-chart data-data="chartData0fae05302b02422383ca0f6230103a15"></div>
<script type="text/javascript">
/* <![CDATA[ */
var chartData0fae05302b02422383ca0f6230103a15 = {
    "series" : [[66.2],[41.7]],
    "tooltips" : ['<h3>02/04/2015 - 12:11:11</h3><br /><span class="linecoverage"></span> Line Coverage: 66.2% (1014/1531)<br /><span class="branchcoverage"></span> Branch coverage: 41.7% (154/369)<br />Total lines: 1849']
};
/* ]]> */
</script>
<h1>Metrics</h1>
<table class="overview">
<thead><tr><th>Method</th><th>Cyclomatic Complexity</th><th>Sequence Coverage</th><th>Branch Coverage</th></tr></thead>
<tbody>
<tr><td title="System.String NCalc2.NCalc2Parser::extractString(System.String)">extractString(...)</td><td>10</td><td>76.67</td><td>56.25</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser::.ctor(Antlr4.Runtime.ITokenStream)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="NCalc2.NCalc2Parser/NcalcContext NCalc2.NCalc2Parser::ncalc()">ncalc()</td><td>1</td><td>75</td><td>100</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext NCalc2.NCalc2Parser::expr()">expr()</td><td>3</td><td>100</td><td>75</td></tr>
<tr><td title="NCalc2.NCalc2Parser/OrExprContext NCalc2.NCalc2Parser::orExpr()">orExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/OrExprContext NCalc2.NCalc2Parser::orExpr(System.Int32)">orExpr(...)</td><td>8</td><td>82.81</td><td>73.33</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AndExprContext NCalc2.NCalc2Parser::andExpr()">andExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AndExprContext NCalc2.NCalc2Parser::andExpr(System.Int32)">andExpr(...)</td><td>8</td><td>82.81</td><td>73.33</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitOrExprContext NCalc2.NCalc2Parser::bitOrExpr()">bitOrExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitOrExprContext NCalc2.NCalc2Parser::bitOrExpr(System.Int32)">bitOrExpr(...)</td><td>6</td><td>86.44</td><td>72.73</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitXorExprContext NCalc2.NCalc2Parser::bitXorExpr()">bitXorExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitXorExprContext NCalc2.NCalc2Parser::bitXorExpr(System.Int32)">bitXorExpr(...)</td><td>6</td><td>86.44</td><td>72.73</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitAndExprContext NCalc2.NCalc2Parser::bitAndExpr()">bitAndExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitAndExprContext NCalc2.NCalc2Parser::bitAndExpr(System.Int32)">bitAndExpr(...)</td><td>6</td><td>86.44</td><td>72.73</td></tr>
<tr><td title="NCalc2.NCalc2Parser/EqExprContext NCalc2.NCalc2Parser::eqExpr()">eqExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/EqExprContext NCalc2.NCalc2Parser::eqExpr(System.Int32)">eqExpr(...)</td><td>14</td><td>82.56</td><td>70.83</td></tr>
<tr><td title="NCalc2.NCalc2Parser/RelExprContext NCalc2.NCalc2Parser::relExpr()">relExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/RelExprContext NCalc2.NCalc2Parser::relExpr(System.Int32)">relExpr(...)</td><td>13</td><td>89.42</td><td>68.18</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ShiftExprContext NCalc2.NCalc2Parser::shiftExpr()">shiftExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ShiftExprContext NCalc2.NCalc2Parser::shiftExpr(System.Int32)">shiftExpr(...)</td><td>9</td><td>88.16</td><td>68.75</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AddExprContext NCalc2.NCalc2Parser::addExpr()">addExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AddExprContext NCalc2.NCalc2Parser::addExpr(System.Int32)">addExpr(...)</td><td>9</td><td>88.16</td><td>68.75</td></tr>
<tr><td title="NCalc2.NCalc2Parser/MultExprContext NCalc2.NCalc2Parser::multExpr()">multExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/MultExprContext NCalc2.NCalc2Parser::multExpr(System.Int32)">multExpr(...)</td><td>11</td><td>88.89</td><td>68.42</td></tr>
<tr><td title="NCalc2.NCalc2Parser/UnaryExprContext NCalc2.NCalc2Parser::unaryExpr()">unaryExpr()</td><td>9</td><td>82.76</td><td>64.29</td></tr>
<tr><td title="NCalc2.NCalc2Parser/PrimaryExprContext NCalc2.NCalc2Parser::primaryExpr()">primaryExpr()</td><td>6</td><td>92.11</td><td>87.5</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ValueContext NCalc2.NCalc2Parser::value()">value()</td><td>20</td><td>89.55</td><td>56.52</td></tr>
<tr><td title="NCalc2.NCalc2Parser/IdContext NCalc2.NCalc2Parser::id()">id()</td><td>9</td><td>78.79</td><td>63.64</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::Sempred(Antlr4.Runtime.RuleContext,System.Int32,System.Int32)">Sempred(...)</td><td>12</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::bitOrExpr_sempred(NCalc2.NCalc2Parser/BitOrExprContext,System.Int32)">bitOrExpr_sempred(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::eqExpr_sempred(NCalc2.NCalc2Parser/EqExprContext,System.Int32)">eqExpr_sempred(...)</td><td>4</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::addExpr_sempred(NCalc2.NCalc2Parser/AddExprContext,System.Int32)">addExpr_sempred(...)</td><td>4</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::orExpr_sempred(NCalc2.NCalc2Parser/OrExprContext,System.Int32)">orExpr_sempred(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::bitAndExpr_sempred(NCalc2.NCalc2Parser/BitAndExprContext,System.Int32)">bitAndExpr_sempred(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::relExpr_sempred(NCalc2.NCalc2Parser/RelExprContext,System.Int32)">relExpr_sempred(...)</td><td>6</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::multExpr_sempred(NCalc2.NCalc2Parser/MultExprContext,System.Int32)">multExpr_sempred(...)</td><td>5</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::bitXorExpr_sempred(NCalc2.NCalc2Parser/BitXorExprContext,System.Int32)">bitXorExpr_sempred(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::andExpr_sempred(NCalc2.NCalc2Parser/AndExprContext,System.Int32)">andExpr_sempred(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Boolean NCalc2.NCalc2Parser::shiftExpr_sempred(NCalc2.NCalc2Parser/ShiftExprContext,System.Int32)">shiftExpr_sempred(...)</td><td>4</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser::.cctor()">.cctor()</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext NCalc2.NCalc2Parser/NcalcContext::expr()">expr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/NcalcContext::Eof()">Eof()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/NcalcContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/NcalcContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/NcalcContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/NcalcContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/OrExprContext NCalc2.NCalc2Parser/ExprContext::orExpr()">orExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext[] NCalc2.NCalc2Parser/ExprContext::expr()">expr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext NCalc2.NCalc2Parser/ExprContext::expr(System.Int32)">expr(...)</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/ExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/OrExprContext NCalc2.NCalc2Parser/OrExprContext::orExpr()">orExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AndExprContext NCalc2.NCalc2Parser/OrExprContext::andExpr()">andExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/OrExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/OrExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/OrExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/OrExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AndExprContext NCalc2.NCalc2Parser/AndExprContext::andExpr()">andExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitOrExprContext NCalc2.NCalc2Parser/AndExprContext::bitOrExpr()">bitOrExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AndExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AndExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AndExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/AndExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitOrExprContext NCalc2.NCalc2Parser/BitOrExprContext::bitOrExpr()">bitOrExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitXorExprContext NCalc2.NCalc2Parser/BitOrExprContext::bitXorExpr()">bitXorExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitOrExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitOrExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitOrExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/BitOrExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitAndExprContext NCalc2.NCalc2Parser/BitXorExprContext::bitAndExpr()">bitAndExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitXorExprContext NCalc2.NCalc2Parser/BitXorExprContext::bitXorExpr()">bitXorExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitXorExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitXorExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitXorExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/BitXorExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/BitAndExprContext NCalc2.NCalc2Parser/BitAndExprContext::bitAndExpr()">bitAndExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/EqExprContext NCalc2.NCalc2Parser/BitAndExprContext::eqExpr()">eqExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitAndExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitAndExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/BitAndExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/BitAndExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/RelExprContext NCalc2.NCalc2Parser/EqExprContext::relExpr()">relExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/EqExprContext NCalc2.NCalc2Parser/EqExprContext::eqExpr()">eqExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/EqExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/EqExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/EqExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/EqExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/RelExprContext NCalc2.NCalc2Parser/RelExprContext::relExpr()">relExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ShiftExprContext NCalc2.NCalc2Parser/RelExprContext::shiftExpr()">shiftExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/RelExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/RelExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/RelExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/RelExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AddExprContext NCalc2.NCalc2Parser/ShiftExprContext::addExpr()">addExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ShiftExprContext NCalc2.NCalc2Parser/ShiftExprContext::shiftExpr()">shiftExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ShiftExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ShiftExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ShiftExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/ShiftExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/AddExprContext NCalc2.NCalc2Parser/AddExprContext::addExpr()">addExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/MultExprContext NCalc2.NCalc2Parser/AddExprContext::multExpr()">multExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AddExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AddExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/AddExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/AddExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/UnaryExprContext NCalc2.NCalc2Parser/MultExprContext::unaryExpr()">unaryExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/MultExprContext NCalc2.NCalc2Parser/MultExprContext::multExpr()">multExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/MultExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/MultExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/MultExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/MultExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/PrimaryExprContext NCalc2.NCalc2Parser/UnaryExprContext::primaryExpr()">primaryExpr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/UnaryExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/UnaryExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/UnaryExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/UnaryExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ValueContext NCalc2.NCalc2Parser/PrimaryExprContext::value()">value()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext[] NCalc2.NCalc2Parser/PrimaryExprContext::expr()">expr()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/ExprContext NCalc2.NCalc2Parser/PrimaryExprContext::expr(System.Int32)">expr(...)</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="NCalc2.NCalc2Parser/IdContext NCalc2.NCalc2Parser/PrimaryExprContext::id()">id()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/PrimaryExprContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/PrimaryExprContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/PrimaryExprContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/PrimaryExprContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::INTEGER()">INTEGER()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::DATETIME()">DATETIME()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::FALSE()">FALSE()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::TRUE()">TRUE()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::STRING()">STRING()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/ValueContext::FLOAT()">FLOAT()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ValueContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ValueContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/ValueContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/ValueContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/IdContext::VAR()">VAR()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="Antlr4.Runtime.Tree.ITerminalNode NCalc2.NCalc2Parser/IdContext::NAME()">NAME()</td><td>1</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/IdContext::.ctor(Antlr4.Runtime.ParserRuleContext,System.Int32)">.ctor(...)</td><td>1</td><td>100</td><td>100</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/IdContext::EnterRule(Antlr4.Runtime.Tree.IParseTreeListener)">EnterRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="System.Void NCalc2.NCalc2Parser/IdContext::ExitRule(Antlr4.Runtime.Tree.IParseTreeListener)">ExitRule(...)</td><td>2</td><td>0</td><td>0</td></tr>
<tr><td title="TResult NCalc2.NCalc2Parser/IdContext::Accept(Antlr4.Runtime.Tree.IParseTreeVisitor`1&lt;TResult&gt;)">Accept(...)</td><td>2</td><td>0</td><td>0</td></tr>
</tbody>
</table>
<h1>File(s)</h1>
<h2 id="cUsersphmarquesDocumentsGitHubNCalc2EvaluantCalculatorobjDebugNCalc2Parsercs">c:\Users\phmarques\Documents\GitHub\NCalc2\Evaluant.Calculator\obj\Debug\NCalc2Parser.cs</h2>
<table class="lineAnalysis">
<thead><tr><th></th><th>#</th><th>Line</th><th></th><th>Line Coverage</th></tr></thead>
<tbody>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1</code></td><td></td><td class="lightgray"><code>//------------------------------------------------------------------------------</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>2</code></td><td></td><td class="lightgray"><code>//&nbsp;&lt;auto-generated&gt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>3</code></td><td></td><td class="lightgray"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;code&nbsp;was&nbsp;generated&nbsp;by&nbsp;a&nbsp;tool.</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>4</code></td><td></td><td class="lightgray"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANTLR&nbsp;Version:&nbsp;4.3</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>5</code></td><td></td><td class="lightgray"><code>//</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>6</code></td><td></td><td class="lightgray"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Changes&nbsp;to&nbsp;this&nbsp;file&nbsp;may&nbsp;cause&nbsp;incorrect&nbsp;behavior&nbsp;and&nbsp;will&nbsp;be&nbsp;lost&nbsp;if</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>7</code></td><td></td><td class="lightgray"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;code&nbsp;is&nbsp;regenerated.</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>8</code></td><td></td><td class="lightgray"><code>//&nbsp;&lt;/auto-generated&gt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>9</code></td><td></td><td class="lightgray"><code>//------------------------------------------------------------------------------</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>10</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>11</code></td><td></td><td class="lightgray"><code>//&nbsp;Generated&nbsp;from&nbsp;C:\Users\phmarques\Documents\GitHub\NCalc2\Grammar\NCalc2.g4&nbsp;by&nbsp;ANTLR&nbsp;4.3</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>12</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>13</code></td><td></td><td class="lightgray"><code>//&nbsp;Unreachable&nbsp;code&nbsp;detected</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>14</code></td><td></td><td class="lightgray"><code>#pragma&nbsp;warning&nbsp;disable&nbsp;0162</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>15</code></td><td></td><td class="lightgray"><code>//&nbsp;The&nbsp;variable&nbsp;&#39;...&#39;&nbsp;is&nbsp;assigned&nbsp;but&nbsp;its&nbsp;value&nbsp;is&nbsp;never&nbsp;used</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>16</code></td><td></td><td class="lightgray"><code>#pragma&nbsp;warning&nbsp;disable&nbsp;0219</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>17</code></td><td></td><td class="lightgray"><code>//&nbsp;Missing&nbsp;XML&nbsp;comment&nbsp;for&nbsp;publicly&nbsp;visible&nbsp;type&nbsp;or&nbsp;member&nbsp;&#39;...&#39;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>18</code></td><td></td><td class="lightgray"><code>#pragma&nbsp;warning&nbsp;disable&nbsp;1591</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>19</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>20</code></td><td></td><td class="lightgray"><code>namespace&nbsp;NCalc2&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>21</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>22</code></td><td></td><td class="lightgray"><code>using&nbsp;System;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>23</code></td><td></td><td class="lightgray"><code>using&nbsp;System.Text;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>24</code></td><td></td><td class="lightgray"><code>using&nbsp;System.Globalization;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>25</code></td><td></td><td class="lightgray"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>26</code></td><td></td><td class="lightgray"><code>using&nbsp;NCalc2.Expressions;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>27</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>28</code></td><td></td><td class="lightgray"><code>using&nbsp;Antlr4.Runtime;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>29</code></td><td></td><td class="lightgray"><code>using&nbsp;Antlr4.Runtime.Atn;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>30</code></td><td></td><td class="lightgray"><code>using&nbsp;Antlr4.Runtime.Misc;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>31</code></td><td></td><td class="lightgray"><code>using&nbsp;Antlr4.Runtime.Tree;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>32</code></td><td></td><td class="lightgray"><code>using&nbsp;System.Collections.Generic;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>33</code></td><td></td><td class="lightgray"><code>using&nbsp;DFA&nbsp;=&nbsp;Antlr4.Runtime.Dfa.DFA;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>34</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>35</code></td><td></td><td class="lightgray"><code>[System.CodeDom.Compiler.GeneratedCode(&quot;ANTLR&quot;,&nbsp;&quot;4.3&quot;)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>36</code></td><td></td><td class="lightgray"><code>[System.CLSCompliant(false)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>37</code></td><td></td><td class="lightgray"><code>public&nbsp;partial&nbsp;class&nbsp;NCalc2Parser&nbsp;:&nbsp;Parser&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>38</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;const&nbsp;int</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>39</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;T__29=1,&nbsp;T__28=2,&nbsp;T__27=3,&nbsp;T__26=4,&nbsp;T__25=5,&nbsp;T__24=6,&nbsp;T__23=7,&nbsp;T__22=8,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>40</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;T__21=9,&nbsp;T__20=10,&nbsp;T__19=11,&nbsp;T__18=12,&nbsp;T__17=13,&nbsp;T__16=14,&nbsp;T__15=15,&nbsp;T__14=16,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>41</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;T__13=17,&nbsp;T__12=18,&nbsp;T__11=19,&nbsp;T__10=20,&nbsp;T__9=21,&nbsp;T__8=22,&nbsp;T__7=23,&nbsp;T__6=24,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>42</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;T__5=25,&nbsp;T__4=26,&nbsp;T__3=27,&nbsp;T__2=28,&nbsp;T__1=29,&nbsp;T__0=30,&nbsp;TRUE=31,&nbsp;FALSE=32,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>43</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;NAME=33,&nbsp;INTEGER=34,&nbsp;DATETIME=35,&nbsp;VAR=36,&nbsp;E=37,&nbsp;FLOAT=38,&nbsp;STRING=39,&nbsp;WS=40;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>44</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;static&nbsp;readonly&nbsp;string[]&nbsp;tokenNames&nbsp;=&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>45</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;INVALID&gt;&quot;,&nbsp;&quot;&#39;/&#39;&quot;,&nbsp;&quot;&#39;!=&#39;&quot;,&nbsp;&quot;&#39;||&#39;&quot;,&nbsp;&quot;&#39;&gt;&gt;&#39;&quot;,&nbsp;&quot;&#39;&lt;&lt;&#39;&quot;,&nbsp;&quot;&#39;&amp;&amp;&#39;&quot;,&nbsp;&quot;&#39;=&#39;&quot;,&nbsp;&quot;&#39;^&#39;&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>46</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&#39;?&#39;&quot;,&nbsp;&quot;&#39;&lt;=&#39;&quot;,&nbsp;&quot;&#39;&amp;&#39;&quot;,&nbsp;&quot;&#39;(&#39;&quot;,&nbsp;&quot;&#39;*&#39;&quot;,&nbsp;&quot;&#39;,&#39;&quot;,&nbsp;&quot;&#39;:&#39;&quot;,&nbsp;&quot;&#39;&gt;=&#39;&quot;,&nbsp;&quot;&#39;&lt;&#39;&quot;,&nbsp;&quot;&#39;==&#39;&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>47</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&#39;|&#39;&quot;,&nbsp;&quot;&#39;~&#39;&quot;,&nbsp;&quot;&#39;&gt;&#39;&quot;,&nbsp;&quot;&#39;or&#39;&quot;,&nbsp;&quot;&#39;!&#39;&quot;,&nbsp;&quot;&#39;&lt;&gt;&#39;&quot;,&nbsp;&quot;&#39;%&#39;&quot;,&nbsp;&quot;&#39;)&#39;&quot;,&nbsp;&quot;&#39;and&#39;&quot;,&nbsp;&quot;&#39;+&#39;&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>48</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&#39;not&#39;&quot;,&nbsp;&quot;&#39;-&#39;&quot;,&nbsp;&quot;&#39;true&#39;&quot;,&nbsp;&quot;&#39;false&#39;&quot;,&nbsp;&quot;NAME&quot;,&nbsp;&quot;INTEGER&quot;,&nbsp;&quot;DATETIME&quot;,&nbsp;&quot;VAR&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>49</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;E&quot;,&nbsp;&quot;FLOAT&quot;,&nbsp;&quot;STRING&quot;,&nbsp;&quot;WS&quot;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>50</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;};</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>51</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;const&nbsp;int</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>52</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;RULE_ncalc&nbsp;=&nbsp;0,&nbsp;RULE_expr&nbsp;=&nbsp;1,&nbsp;RULE_orExpr&nbsp;=&nbsp;2,&nbsp;RULE_andExpr&nbsp;=&nbsp;3,&nbsp;RULE_bitOrExpr&nbsp;=&nbsp;4,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>53</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;RULE_bitXorExpr&nbsp;=&nbsp;5,&nbsp;RULE_bitAndExpr&nbsp;=&nbsp;6,&nbsp;RULE_eqExpr&nbsp;=&nbsp;7,&nbsp;RULE_relExpr&nbsp;=&nbsp;8,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>54</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;RULE_shiftExpr&nbsp;=&nbsp;9,&nbsp;RULE_addExpr&nbsp;=&nbsp;10,&nbsp;RULE_multExpr&nbsp;=&nbsp;11,&nbsp;RULE_unaryExpr&nbsp;=&nbsp;12,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>55</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;RULE_primaryExpr&nbsp;=&nbsp;13,&nbsp;RULE_value&nbsp;=&nbsp;14,&nbsp;RULE_id&nbsp;=&nbsp;15;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>56</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;static&nbsp;readonly&nbsp;string[]&nbsp;ruleNames&nbsp;=&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>57</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;ncalc&quot;,&nbsp;&quot;expr&quot;,&nbsp;&quot;orExpr&quot;,&nbsp;&quot;andExpr&quot;,&nbsp;&quot;bitOrExpr&quot;,&nbsp;&quot;bitXorExpr&quot;,&nbsp;&quot;bitAndExpr&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>58</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;eqExpr&quot;,&nbsp;&quot;relExpr&quot;,&nbsp;&quot;shiftExpr&quot;,&nbsp;&quot;addExpr&quot;,&nbsp;&quot;multExpr&quot;,&nbsp;&quot;unaryExpr&quot;,</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>59</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;primaryExpr&quot;,&nbsp;&quot;value&quot;,&nbsp;&quot;id&quot;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>60</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;};</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>61</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>62</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;override&nbsp;string&nbsp;GrammarFileName&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;&quot;NCalc2.g4&quot;;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>63</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>64</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;override&nbsp;string[]&nbsp;TokenNames&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;tokenNames;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>65</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>66</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;override&nbsp;string[]&nbsp;RuleNames&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;ruleNames;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>67</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>68</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;override&nbsp;string&nbsp;SerializedAtn&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;_serializedATN;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>69</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>70</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>71</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;private&nbsp;const&nbsp;char&nbsp;BS&nbsp;=&nbsp;&#39;\\&#39;;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>72</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;static&nbsp;NumberFormatInfo&nbsp;numberFormatInfo&nbsp;=&nbsp;new&nbsp;NumberFormatInfo();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>73</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>74</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;string&nbsp;extractString(string&nbsp;text)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>75</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>76</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder&nbsp;sb&nbsp;=&nbsp;new&nbsp;StringBuilder(text);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>77</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;startIndex&nbsp;=&nbsp;1;&nbsp;//&nbsp;Skip&nbsp;initial&nbsp;quote</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>78</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;slashIndex&nbsp;=&nbsp;-1;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>79</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '29', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">29</td><td class="rightmargin right"><code>80</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;((slashIndex&nbsp;=&nbsp;sb.ToString().IndexOf(BS,&nbsp;startIndex))&nbsp;!=&nbsp;-1)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>81</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>82</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;escapeType&nbsp;=&nbsp;sb[slashIndex&nbsp;+&nbsp;1];</code></td></tr>
<tr title="6 of 13 branches are covered" data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>83</code></td><td class="branch coverage40">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(escapeType)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>84</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>85</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;u&#39;:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '7', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">7</td><td class="rightmargin right"><code>86</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;hcode&nbsp;=&nbsp;String.Concat(sb[slashIndex+4],&nbsp;sb[slashIndex+5]);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '7', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">7</td><td class="rightmargin right"><code>87</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;lcode&nbsp;=&nbsp;String.Concat(sb[slashIndex+2],&nbsp;sb[slashIndex+3]);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '7', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">7</td><td class="rightmargin right"><code>88</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;unicodeChar&nbsp;=&nbsp;Encoding.Unicode.GetChars(new&nbsp;byte[]&nbsp;{&nbsp;System.Convert.ToByte(hcode,&nbsp;16),&nbsp;System.Conve</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '7', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">7</td><td class="rightmargin right"><code>89</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.Remove(slashIndex,&nbsp;6).Insert(slashIndex,&nbsp;unicodeChar);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '7', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">7</td><td class="rightmargin right"><code>90</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>91</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;n&#39;:&nbsp;sb.Remove(slashIndex,&nbsp;2).Insert(slashIndex,&nbsp;&#39;\n&#39;);&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>92</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;r&#39;:&nbsp;sb.Remove(slashIndex,&nbsp;2).Insert(slashIndex,&nbsp;&#39;\r&#39;);&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>93</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;t&#39;:&nbsp;sb.Remove(slashIndex,&nbsp;2).Insert(slashIndex,&nbsp;&#39;\t&#39;);&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>94</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;\&#39;&#39;:&nbsp;sb.Remove(slashIndex,&nbsp;2).Insert(slashIndex,&nbsp;&#39;\&#39;&#39;);&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>95</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&#39;\\&#39;:&nbsp;sb.Remove(slashIndex,&nbsp;2).Insert(slashIndex,&nbsp;&#39;\\&#39;);&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>96</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;throw&nbsp;new&nbsp;Exception(&quot;Unvalid&nbsp;escape&nbsp;sequence:&nbsp;\\&quot;&nbsp;+&nbsp;escapeType);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>97</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>98</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>99</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startIndex&nbsp;=&nbsp;slashIndex&nbsp;+&nbsp;1;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>100</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>101</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>102</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>103</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.Remove(0,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>104</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sb.Remove(sb.Length&nbsp;-&nbsp;1,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>105</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>106</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;sb.ToString();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>107</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>108</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>109</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;NCalc2Parser(ITokenStream&nbsp;input)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>110</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(input)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>111</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>112</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;_interp&nbsp;=&nbsp;new&nbsp;ParserATNSimulator(this,_ATN);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>113</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>114</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;NcalcContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>115</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>116</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;_expr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>117</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;expr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>118</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>119</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>120</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;Eof()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.Eof,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>121</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;NcalcContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>122</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>123</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>124</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>125</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_ncalc;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>126</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>127</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>128</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterNcalc(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>129</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>130</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>131</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>132</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitNcalc(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>133</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>134</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>135</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>136</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitNcalc(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>137</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>138</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>139</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>140</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>141</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>142</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;NcalcContext&nbsp;ncalc()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>143</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;NcalcContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;NcalcContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>144</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;0,&nbsp;RULE_ncalc);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>145</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>146</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>147</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '664', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">664</td><td class="rightmargin right"><code>148</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;32;&nbsp;_localctx._expr&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '664', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">664</td><td class="rightmargin right"><code>149</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;33;&nbsp;Match(Eof);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>150</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._expr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>151</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>152</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>153</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>154</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>155</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>156</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>157</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>158</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>159</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>160</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>161</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '332', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">332</td><td class="rightmargin right"><code>162</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>163</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>164</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;ExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>165</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>166</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>167</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;middle;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>168</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;right;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>169</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;_orExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>170</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;orExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>171</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;OrExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>172</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>173</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext[]&nbsp;expr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>174</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContexts&lt;ExprContext&gt;();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>175</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>176</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;expr(int&nbsp;i)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>177</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ExprContext&gt;(i);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>178</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>179</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>180</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>181</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>182</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>183</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_expr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>184</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>185</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>186</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>187</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>188</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>189</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>190</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>191</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>192</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>193</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>194</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>195</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>196</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>197</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>198</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>199</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>200</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;expr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>201</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;ExprContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>202</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;2,&nbsp;RULE_expr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>203</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>204</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;46;</code></td></tr>
<tr title="2 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>205</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,0,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>206</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>207</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>208</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>209</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;36;&nbsp;_localctx.first&nbsp;=&nbsp;orExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>210</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;37;&nbsp;Match(T__21);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>211</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;38;&nbsp;_localctx.middle&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>212</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;39;&nbsp;Match(T__15);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>213</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;40;&nbsp;_localctx.right&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>214</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;TernaryExpression(_localctx.first.retValue,&nbsp;_localctx.middle.retValue,&nbsp;_localctx.righ</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>215</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>216</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>217</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>218</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '436', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">436</td><td class="rightmargin right"><code>219</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '436', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">436</td><td class="rightmargin right"><code>220</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '872', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">872</td><td class="rightmargin right"><code>221</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;43;&nbsp;_localctx._orExpr&nbsp;=&nbsp;orExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '436', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">436</td><td class="rightmargin right"><code>222</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._orExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '436', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">436</td><td class="rightmargin right"><code>223</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '436', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">436</td><td class="rightmargin right"><code>224</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>225</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>226</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>227</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>228</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>229</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>230</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>231</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>232</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>233</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>234</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>235</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '455', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">455</td><td class="rightmargin right"><code>236</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>237</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>238</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;OrExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>239</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>240</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>241</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AndExprContext&nbsp;_andExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>242</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;orExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>243</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;OrExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>244</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>245</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AndExprContext&nbsp;andExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>246</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;AndExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>247</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>248</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>249</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>250</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>251</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>252</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_orExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>253</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>254</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>255</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>256</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>257</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>258</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>259</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>260</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>261</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>262</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>263</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>264</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>265</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>266</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>267</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>268</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>269</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;OrExprContext&nbsp;orExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>270</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;orExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>271</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>272</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>273</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;OrExprContext&nbsp;orExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>274</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>275</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>276</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;OrExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;OrExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>277</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;OrExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>278</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;4;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>279</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;4,&nbsp;RULE_orExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>280</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_la;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>281</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>282</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>283</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>284</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>285</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '902', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">902</td><td class="rightmargin right"><code>286</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;49;&nbsp;_localctx._andExpr&nbsp;=&nbsp;andExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>287</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._andExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>288</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>289</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>290</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;59;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>291</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>292</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,1,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>293</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>294</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>295</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>296</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>297</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>298</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>299</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;OrExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>300</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>301</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_orExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>302</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;52;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>303</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>304</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;53;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>305</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>306</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;!(_la==T__27&nbsp;||&nbsp;_la==T__8)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>307</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.RecoverInline(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>308</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>309</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consume();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>310</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;54;&nbsp;_localctx._andExpr&nbsp;=&nbsp;andExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>311</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Or,&nbsp;_localctx.first.retValue,&nbsp;_localctx._andE</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>312</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>313</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>314</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>315</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;61;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>316</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>317</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,1,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>318</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>319</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>320</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>321</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>322</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>323</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>324</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>325</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>326</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>327</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>328</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>329</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '451', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">451</td><td class="rightmargin right"><code>330</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>331</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>332</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;AndExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>333</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>334</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AndExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>335</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitOrExprContext&nbsp;_bitOrExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>336</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AndExprContext&nbsp;andExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>337</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;AndExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>338</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>339</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitOrExprContext&nbsp;bitOrExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>340</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitOrExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>341</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>342</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AndExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>343</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>344</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>345</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>346</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_andExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>347</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>348</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>349</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>350</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>351</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>352</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>353</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>354</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>355</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>356</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>357</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>358</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>359</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>360</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>361</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>362</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>363</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;AndExprContext&nbsp;andExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>364</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;andExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>365</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>366</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>367</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;AndExprContext&nbsp;andExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>368</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>369</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>370</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;AndExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;AndExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>371</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;AndExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>372</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;6;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>373</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;6,&nbsp;RULE_andExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>374</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_la;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>375</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>376</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>377</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>378</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>379</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '912', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">912</td><td class="rightmargin right"><code>380</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;63;&nbsp;_localctx._bitOrExpr&nbsp;=&nbsp;bitOrExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>381</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._bitOrExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>382</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>383</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>384</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;73;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>385</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>386</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,2,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '466', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">466</td><td class="rightmargin right"><code>387</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>388</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>389</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>390</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>391</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>392</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>393</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;AndExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>394</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>395</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_andExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>396</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;66;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>397</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>398</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;67;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>399</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>400</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;!(_la==T__24&nbsp;||&nbsp;_la==T__3)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>401</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.RecoverInline(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>402</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>403</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consume();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>404</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;68;&nbsp;_localctx._bitOrExpr&nbsp;=&nbsp;bitOrExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>405</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.And,&nbsp;_localctx.first.retValue,&nbsp;_localctx._bit</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>406</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>407</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>408</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>409</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;75;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>410</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>411</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,2,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>412</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>413</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>414</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>415</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>416</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>417</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>418</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>419</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>420</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>421</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>422</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>423</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '456', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">456</td><td class="rightmargin right"><code>424</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>425</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>426</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;BitOrExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>427</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>428</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitOrExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>429</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitXorExprContext&nbsp;_bitXorExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>430</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitOrExprContext&nbsp;bitOrExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>431</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitOrExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>432</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>433</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitXorExprContext&nbsp;bitXorExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>434</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitXorExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>435</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>436</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitOrExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>437</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>438</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>439</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>440</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_bitOrExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>441</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>442</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>443</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterBitOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>444</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>445</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>446</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>447</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitBitOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>448</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>449</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>450</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>451</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitBitOrExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>452</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>453</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>454</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>455</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>456</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>457</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;BitOrExprContext&nbsp;bitOrExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>458</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bitOrExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>459</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>460</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>461</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;BitOrExprContext&nbsp;bitOrExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>462</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>463</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>464</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitOrExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitOrExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>465</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitOrExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>466</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;8;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>467</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;8,&nbsp;RULE_bitOrExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>468</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>469</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>470</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>471</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>472</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '922', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">922</td><td class="rightmargin right"><code>473</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;77;&nbsp;_localctx._bitXorExpr&nbsp;=&nbsp;bitXorExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>474</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._bitXorExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>475</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>476</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>477</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;87;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>478</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>479</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,3,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>480</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>481</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>482</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>483</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>484</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>485</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>486</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitOrExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>487</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>488</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_bitOrExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>489</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;80;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>490</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>491</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;81;&nbsp;Match(T__11);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>492</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;82;&nbsp;_localctx._bitXorExpr&nbsp;=&nbsp;bitXorExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>493</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.BitwiseOr,&nbsp;_localctx.first.retValue,&nbsp;_localct</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>494</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>495</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>496</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>497</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;89;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>498</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>499</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,3,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>500</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>501</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>502</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>503</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>504</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>505</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>506</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>507</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>508</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>509</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>510</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>511</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '461', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">461</td><td class="rightmargin right"><code>512</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>513</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>514</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;BitXorExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>515</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>516</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitXorExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>517</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitAndExprContext&nbsp;_bitAndExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>518</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitAndExprContext&nbsp;bitAndExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>519</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitAndExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>520</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>521</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitXorExprContext&nbsp;bitXorExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>522</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitXorExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>523</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>524</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitXorExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>525</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>526</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>527</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>528</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_bitXorExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>529</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>530</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>531</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterBitXorExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>532</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>533</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>534</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>535</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitBitXorExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>536</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>537</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>538</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>539</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitBitXorExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>540</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>541</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>542</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>543</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>544</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>545</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;BitXorExprContext&nbsp;bitXorExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>546</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bitXorExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>547</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>548</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>549</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;BitXorExprContext&nbsp;bitXorExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>550</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>551</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>552</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitXorExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitXorExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>553</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitXorExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>554</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;10;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>555</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;10,&nbsp;RULE_bitXorExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>556</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>557</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>558</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>559</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>560</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '924', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">924</td><td class="rightmargin right"><code>561</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;91;&nbsp;_localctx._bitAndExpr&nbsp;=&nbsp;bitAndExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>562</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._bitAndExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>563</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>564</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>565</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;101;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>566</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>567</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,4,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>568</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>569</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>570</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>571</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>572</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>573</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>574</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitXorExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>575</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>576</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_bitXorExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>577</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;94;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>578</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>579</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;95;&nbsp;Match(T__22);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>580</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;96;&nbsp;_localctx._bitAndExpr&nbsp;=&nbsp;bitAndExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>581</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.BitwiseXOr,&nbsp;_localctx.first.retValue,&nbsp;_localc</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>582</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>583</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>584</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>585</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;103;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>586</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>587</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,4,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>588</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>589</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>590</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>591</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>592</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>593</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>594</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>595</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>596</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>597</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>598</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>599</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '462', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">462</td><td class="rightmargin right"><code>600</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>601</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>602</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;BitAndExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>603</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>604</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitAndExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>605</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;EqExprContext&nbsp;_eqExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>606</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitAndExprContext&nbsp;bitAndExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>607</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;BitAndExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>608</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>609</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;EqExprContext&nbsp;eqExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>610</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;EqExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>611</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>612</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;BitAndExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>613</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>614</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>615</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>616</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_bitAndExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>617</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>618</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>619</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterBitAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>620</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>621</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>622</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>623</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitBitAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>624</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>625</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>626</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>627</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitBitAndExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>628</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>629</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>630</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>631</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>632</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>633</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;BitAndExprContext&nbsp;bitAndExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>634</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bitAndExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>635</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>636</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>637</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;BitAndExprContext&nbsp;bitAndExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>638</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>639</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>640</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitAndExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitAndExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>641</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;BitAndExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>642</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;12;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>643</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;12,&nbsp;RULE_bitAndExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>644</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>645</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>646</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>647</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>648</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '926', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">926</td><td class="rightmargin right"><code>649</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;105;&nbsp;_localctx._eqExpr&nbsp;=&nbsp;eqExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>650</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._eqExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>651</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>652</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>653</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;115;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>654</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>655</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,5,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '465', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">465</td><td class="rightmargin right"><code>656</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>657</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>658</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>659</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>660</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>661</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>662</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;BitAndExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>663</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>664</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_bitAndExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>665</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;108;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>666</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>667</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;109;&nbsp;Match(T__19);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>668</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;110;&nbsp;_localctx._eqExpr&nbsp;=&nbsp;eqExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>669</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.BitwiseAnd,&nbsp;_localctx.first.retValue,&nbsp;_localc</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>670</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>671</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>672</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>673</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;117;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>674</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>675</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,5,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>676</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>677</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>678</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>679</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>680</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>681</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>682</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>683</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>684</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>685</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>686</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>687</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '463', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">463</td><td class="rightmargin right"><code>688</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>689</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>690</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;EqExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>691</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>692</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;EqExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>693</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;RelExprContext&nbsp;_relExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>694</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;RelExprContext&nbsp;relExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>695</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;RelExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>696</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>697</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;EqExprContext&nbsp;eqExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>698</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;EqExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>699</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>700</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;EqExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>701</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>702</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>703</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>704</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_eqExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>705</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>706</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>707</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterEqExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>708</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>709</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>710</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>711</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitEqExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>712</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>713</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>714</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>715</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitEqExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>716</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>717</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>718</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>719</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>720</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>721</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;EqExprContext&nbsp;eqExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>722</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;eqExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>723</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>724</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>725</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;EqExprContext&nbsp;eqExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>726</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>727</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>728</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EqExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;EqExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>729</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EqExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>730</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;14;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>731</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;14,&nbsp;RULE_eqExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>732</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_la;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>733</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>734</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>735</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>736</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>737</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '928', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">928</td><td class="rightmargin right"><code>738</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;119;&nbsp;_localctx._relExpr&nbsp;=&nbsp;relExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>739</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._relExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>740</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>741</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>742</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;134;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>743</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>744</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,7,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '484', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">484</td><td class="rightmargin right"><code>745</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>746</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>747</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>748</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>749</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>750</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;132;</code></td></tr>
<tr title="2 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>751</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,6,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>752</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>753</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>754</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;EqExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>755</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>756</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_eqExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>757</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;122;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>758</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;3)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;3)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>759</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;123;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>760</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>761</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;!(_la==T__23&nbsp;||&nbsp;_la==T__12)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>762</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.RecoverInline(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>763</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>764</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consume();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>765</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;124;&nbsp;_localctx._relExpr&nbsp;=&nbsp;relExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>766</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Equal,&nbsp;_localctx.first.retValue,&nbsp;_localctx.</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>767</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>768</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>769</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>770</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>771</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>772</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;EqExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>773</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>774</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_eqExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>775</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;127;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>776</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>777</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;128;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>778</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>779</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;!(_la==T__28&nbsp;||&nbsp;_la==T__6)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>780</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.RecoverInline(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>781</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>782</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consume();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>783</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;129;&nbsp;_localctx._relExpr&nbsp;=&nbsp;relExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>784</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.NotEqual,&nbsp;_localctx.first.retValue,&nbsp;_localc</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>785</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>786</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>787</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>788</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>789</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>790</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;136;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>791</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>792</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,7,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>793</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>794</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>795</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>796</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>797</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>798</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>799</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>800</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>801</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>802</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>803</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>804</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '464', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">464</td><td class="rightmargin right"><code>805</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>806</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>807</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;RelExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>808</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>809</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;RelExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>810</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ShiftExprContext&nbsp;_shiftExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>811</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;RelExprContext&nbsp;relExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>812</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;RelExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>813</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>814</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ShiftExprContext&nbsp;shiftExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>815</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ShiftExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>816</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>817</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;RelExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>818</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>819</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>820</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>821</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_relExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>822</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>823</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>824</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterRelExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>825</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>826</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>827</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>828</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitRelExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>829</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>830</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>831</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>832</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitRelExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>833</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>834</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>835</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>836</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>837</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>838</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;RelExprContext&nbsp;relExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>839</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;relExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>840</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>841</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>842</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;RelExprContext&nbsp;relExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>843</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>844</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>845</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;RelExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;RelExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>846</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;RelExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>847</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;16;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>848</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;16,&nbsp;RULE_relExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>849</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>850</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>851</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>852</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>853</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '948', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">948</td><td class="rightmargin right"><code>854</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;138;&nbsp;_localctx._shiftExpr&nbsp;=&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>855</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._shiftExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>856</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>857</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>858</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;163;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>859</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>860</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,9,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '500', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">500</td><td class="rightmargin right"><code>861</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '26', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">26</td><td class="rightmargin right"><code>862</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>863</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>864</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>865</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>866</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;161;</code></td></tr>
<tr title="4 of 5 branches are covered" data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>867</code></td><td class="branch coverage80">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,8,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>868</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>869</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>870</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;RelExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>871</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>872</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_relExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>873</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;141;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>874</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;5)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;5)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>875</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;142;&nbsp;Match(T__13);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>876</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;143;&nbsp;_localctx._shiftExpr&nbsp;=&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>877</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Lesser,&nbsp;_localctx.first.retValue,&nbsp;_localctx</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>878</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>879</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>880</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>881</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>882</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>883</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;RelExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>884</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>885</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_relExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>886</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;146;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>887</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;4)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;4)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>888</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;147;&nbsp;Match(T__20);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>889</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;148;&nbsp;_localctx._shiftExpr&nbsp;=&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>890</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.LesserOrEqual,&nbsp;_localctx.first.retValue,&nbsp;_l</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>891</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>892</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>893</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>894</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>895</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>896</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;RelExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>897</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>898</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_relExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>899</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;151;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>900</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;3)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;3)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>901</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;152;&nbsp;Match(T__9);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>902</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;153;&nbsp;_localctx._shiftExpr&nbsp;=&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>903</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Greater,&nbsp;_localctx.first.retValue,&nbsp;_localct</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>904</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>905</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>906</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>907</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;4:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>908</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>909</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;RelExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>910</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>911</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_relExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>912</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;156;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>913</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>914</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;157;&nbsp;Match(T__14);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>915</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;158;&nbsp;_localctx._shiftExpr&nbsp;=&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>916</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.GreaterOrEqual,&nbsp;_localctx.first.retValue,&nbsp;_</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>917</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>918</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>919</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>920</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>921</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>922</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;165;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>923</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>924</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,9,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '13', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">13</td><td class="rightmargin right"><code>925</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>926</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>927</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>928</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>929</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>930</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>931</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>932</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>933</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>934</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>935</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>936</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '474', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">474</td><td class="rightmargin right"><code>937</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>938</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>939</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;ShiftExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>940</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>941</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ShiftExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>942</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AddExprContext&nbsp;_addExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>943</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AddExprContext&nbsp;addExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>944</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;AddExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>945</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>946</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ShiftExprContext&nbsp;shiftExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>947</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ShiftExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>948</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>949</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ShiftExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>950</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>951</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>952</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>953</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_shiftExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>954</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>955</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>956</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterShiftExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>957</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>958</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>959</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>960</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitShiftExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>961</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>962</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>963</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>964</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitShiftExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>965</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>966</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>967</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>968</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>969</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>970</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;ShiftExprContext&nbsp;shiftExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>971</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;shiftExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>972</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>973</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>974</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;ShiftExprContext&nbsp;shiftExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>975</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>976</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>977</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ShiftExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;ShiftExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>978</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ShiftExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>979</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;18;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>980</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;18,&nbsp;RULE_shiftExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>981</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>982</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>983</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>984</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>985</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '974', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">974</td><td class="rightmargin right"><code>986</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;167;&nbsp;_localctx._addExpr&nbsp;=&nbsp;addExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>987</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._addExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>988</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>989</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>990</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;182;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>991</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>992</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,11,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '491', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">491</td><td class="rightmargin right"><code>993</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>994</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>995</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>996</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>997</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>998</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;180;</code></td></tr>
<tr title="2 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>999</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,10,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1000</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1001</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1002</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;ShiftExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1003</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1004</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_shiftExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1005</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;170;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1006</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;3)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;3)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1007</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;171;&nbsp;Match(T__25);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1008</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;172;&nbsp;_localctx._addExpr&nbsp;=&nbsp;addExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1009</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.LeftShift,&nbsp;_localctx.first.retValue,&nbsp;_local</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1010</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1011</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1012</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1013</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1014</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1015</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;ShiftExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1016</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1017</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_shiftExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1018</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;175;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1019</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1020</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;176;&nbsp;Match(T__26);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1021</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;177;&nbsp;_localctx._addExpr&nbsp;=&nbsp;addExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1022</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.RightShift,&nbsp;_localctx.first.retValue,&nbsp;_loca</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1023</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1024</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1025</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1026</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1027</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1028</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;184;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1029</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1030</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,11,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1031</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1032</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1033</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1034</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1035</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1036</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1037</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1038</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1039</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1040</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1041</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1042</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '487', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">487</td><td class="rightmargin right"><code>1043</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1044</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1045</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;AddExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1046</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1047</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AddExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1048</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MultExprContext&nbsp;_multExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1049</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AddExprContext&nbsp;addExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1050</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;AddExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1051</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1052</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MultExprContext&nbsp;multExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1053</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;MultExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1054</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1055</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;AddExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1056</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1057</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1058</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1059</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_addExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1060</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1061</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1062</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterAddExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1063</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1064</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1065</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1066</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitAddExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1067</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1068</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1069</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1070</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitAddExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1071</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1072</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1073</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1074</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1075</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1076</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;AddExprContext&nbsp;addExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1077</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;addExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1078</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1079</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1080</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;AddExprContext&nbsp;addExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1081</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1082</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1083</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;AddExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;AddExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1084</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;AddExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1085</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;20;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1086</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;20,&nbsp;RULE_addExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1087</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1088</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1089</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1090</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1091</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '978', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">978</td><td class="rightmargin right"><code>1092</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;186;&nbsp;_localctx._multExpr&nbsp;=&nbsp;multExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1093</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._multExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1094</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1095</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1096</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;201;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1097</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1098</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,13,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '971', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">971</td><td class="rightmargin right"><code>1099</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '482', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">482</td><td class="rightmargin right"><code>1100</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1101</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1102</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1103</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1104</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;199;</code></td></tr>
<tr title="2 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1105</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,12,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1106</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1107</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1108</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;AddExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1109</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1110</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_addExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1111</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;189;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1112</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;3)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;3)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '476', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">476</td><td class="rightmargin right"><code>1113</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;190;&nbsp;Match(T__2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '476', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">476</td><td class="rightmargin right"><code>1114</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;191;&nbsp;_localctx._multExpr&nbsp;=&nbsp;multExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1115</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Plus,&nbsp;_localctx.first.retValue,&nbsp;_localctx._</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1116</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '238', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">238</td><td class="rightmargin right"><code>1117</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1118</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1119</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1120</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1121</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;AddExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1122</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1123</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_addExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1124</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;194;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1125</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1126</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;195;&nbsp;Match(T__0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1127</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;196;&nbsp;_localctx._multExpr&nbsp;=&nbsp;multExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1128</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Minus,&nbsp;_localctx.first.retValue,&nbsp;_localctx.</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1129</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '3', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">3</td><td class="rightmargin right"><code>1130</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1131</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1132</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1133</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1134</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;203;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1135</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1136</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,13,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '241', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">241</td><td class="rightmargin right"><code>1137</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1138</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1139</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1140</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1141</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1142</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1143</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1144</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1145</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1146</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1147</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1148</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '489', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">489</td><td class="rightmargin right"><code>1149</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1150</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1151</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;MultExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1152</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1153</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MultExprContext&nbsp;first;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1154</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;UnaryExprContext&nbsp;_unaryExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1155</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;UnaryExprContext&nbsp;unaryExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1156</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;UnaryExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1157</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1158</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MultExprContext&nbsp;multExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1159</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;MultExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1160</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1161</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MultExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1162</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1163</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1164</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1165</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_multExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1166</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1167</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1168</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterMultExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1169</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1170</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1171</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1172</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitMultExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1173</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1174</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1175</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1176</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitMultExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1177</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1178</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1179</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1180</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1181</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1182</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;MultExprContext&nbsp;multExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1183</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;multExpr(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1184</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1185</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1186</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;private&nbsp;MultExprContext&nbsp;multExpr(int&nbsp;_p)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1187</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ParserRuleContext&nbsp;_parentctx&nbsp;=&nbsp;_ctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1188</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_parentState&nbsp;=&nbsp;State;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1189</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;MultExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;MultExprContext(_ctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1190</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;MultExprContext&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1191</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_startState&nbsp;=&nbsp;22;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1192</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRecursionRule(_localctx,&nbsp;22,&nbsp;RULE_multExpr,&nbsp;_p);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1193</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1194</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_alt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1195</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1196</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1197</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1460', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1460</td><td class="rightmargin right"><code>1198</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;205;&nbsp;_localctx._unaryExpr&nbsp;=&nbsp;unaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1199</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._unaryExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1200</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1201</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_ctx.stop&nbsp;=&nbsp;_input.Lt(-1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1202</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;225;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1203</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1204</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,15,_ctx);</code></td></tr>
<tr title="4 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '794', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">794</td><td class="rightmargin right"><code>1205</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(&nbsp;_alt!=2&nbsp;&amp;&amp;&nbsp;_alt!=global::Antlr4.Runtime.Atn.ATN.InvalidAltNumber&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '64', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">64</td><td class="rightmargin right"><code>1206</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_alt==1&nbsp;)&nbsp;{</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1207</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;_parseListeners!=null&nbsp;)&nbsp;TriggerExitRuleEvent();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1208</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_prevctx&nbsp;=&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1209</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1210</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;223;</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1211</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,14,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1212</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1213</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1214</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;MultExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1215</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1216</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_multExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1217</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;208;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1218</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;4)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;4)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '36', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">36</td><td class="rightmargin right"><code>1219</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;209;&nbsp;Match(T__17);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '36', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">36</td><td class="rightmargin right"><code>1220</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;210;&nbsp;_localctx._unaryExpr&nbsp;=&nbsp;unaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1221</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Times,&nbsp;_localctx.first.retValue,&nbsp;_localctx.</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1222</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '18', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">18</td><td class="rightmargin right"><code>1223</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1224</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1225</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1226</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1227</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;MultExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1228</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1229</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_multExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1230</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;213;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1231</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;3)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;3)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1232</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;214;&nbsp;Match(T__29);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1233</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;215;&nbsp;_localctx._unaryExpr&nbsp;=&nbsp;unaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1234</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Div,&nbsp;_localctx.first.retValue,&nbsp;_localctx._u</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1235</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1236</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1237</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1238</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1239</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1240</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;MultExprContext(_parentctx,&nbsp;_parentState);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1241</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.first&nbsp;=&nbsp;_prevctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1242</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PushNewRecursionContext(_localctx,&nbsp;_startState,&nbsp;RULE_multExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1243</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;218;</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1244</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!(Precpred(_ctx,&nbsp;2)))&nbsp;throw&nbsp;new&nbsp;FailedPredicateException(this,&nbsp;&quot;Precpred(_ctx,&nbsp;2)&quot;);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>1245</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;219;&nbsp;Match(T__5);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>1246</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;220;&nbsp;_localctx._unaryExpr&nbsp;=&nbsp;unaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1247</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;BinaryExpression(BinaryExpressionType.Modulo,&nbsp;_localctx.first.retValue,&nbsp;_localctx</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1248</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1249</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1250</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1251</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1252</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1253</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;227;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1254</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1255</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_alt&nbsp;=&nbsp;Interpreter.AdaptivePredict(_input,15,_ctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '32', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">32</td><td class="rightmargin right"><code>1256</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1257</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1258</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1259</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1260</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1261</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1262</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1263</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1264</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1265</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UnrollRecursionContexts(_parentctx);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1266</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1267</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '730', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">730</td><td class="rightmargin right"><code>1268</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1269</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1270</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;UnaryExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1271</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1272</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;PrimaryExprContext&nbsp;_primaryExpr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1273</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;PrimaryExprContext&nbsp;primaryExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1274</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;PrimaryExprContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1275</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1276</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;UnaryExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1277</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1278</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1279</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1280</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_unaryExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1281</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1282</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1283</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterUnaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1284</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1285</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1286</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1287</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitUnaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1288</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1289</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1290</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1291</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitUnaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1292</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1293</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1294</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1295</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1296</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1297</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;UnaryExprContext&nbsp;unaryExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1298</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;UnaryExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;UnaryExprContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1299</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;24,&nbsp;RULE_unaryExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1300</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_la;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1301</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1302</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;243;</code></td></tr>
<tr title="14 of 23 branches are covered" data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1303</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(_input.La(1))&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1304</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;T__7:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1305</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;T__1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1306</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1307</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1308</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;228;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1309</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1310</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(&nbsp;!(_la==T__7&nbsp;||&nbsp;_la==T__1)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1311</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.RecoverInline(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1312</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1313</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Consume();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '8', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">8</td><td class="rightmargin right"><code>1314</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;229;&nbsp;_localctx._primaryExpr&nbsp;=&nbsp;primaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1315</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;UnaryExpression(UnaryExpressionType.Not,&nbsp;_localctx._primaryExpr.retValue);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1316</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '4', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">4</td><td class="rightmargin right"><code>1317</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1318</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;T__10:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1319</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1320</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1321</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;232;&nbsp;Match(T__10);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><code>1322</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;233;&nbsp;_localctx._primaryExpr&nbsp;=&nbsp;primaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1323</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;UnaryExpression(UnaryExpressionType.BitwiseNot,&nbsp;_localctx._primaryExpr.retValue);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1324</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1325</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1326</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;T__0:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1327</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1328</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>1329</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;236;&nbsp;Match(T__0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '12', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">12</td><td class="rightmargin right"><code>1330</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;237;&nbsp;_localctx._primaryExpr&nbsp;=&nbsp;primaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1331</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;UnaryExpression(UnaryExpressionType.Negate,&nbsp;_localctx._primaryExpr.retValue);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1332</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '6', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">6</td><td class="rightmargin right"><code>1333</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1334</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;T__18:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1335</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TRUE:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1336</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;FALSE:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1337</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;NAME:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1338</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;INTEGER:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1339</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;DATETIME:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1340</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;VAR:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1341</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;FLOAT:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1342</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;STRING:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '751', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">751</td><td class="rightmargin right"><code>1343</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '751', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">751</td><td class="rightmargin right"><code>1344</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1502', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1502</td><td class="rightmargin right"><code>1345</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;240;&nbsp;_localctx._primaryExpr&nbsp;=&nbsp;primaryExpr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '751', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">751</td><td class="rightmargin right"><code>1346</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._primaryExpr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '751', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">751</td><td class="rightmargin right"><code>1347</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '751', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">751</td><td class="rightmargin right"><code>1348</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1349</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1350</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;NoViableAltException(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1351</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1352</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1353</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1354</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1355</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1356</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1357</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1358</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1359</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1360</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1361</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1362</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1363</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1364</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;PrimaryExprContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1365</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1366</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;_expr;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1367</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ValueContext&nbsp;_value;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1368</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IdContext&nbsp;_id;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1369</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ValueContext&nbsp;value()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1370</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ValueContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1371</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1372</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext[]&nbsp;expr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1373</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContexts&lt;ExprContext&gt;();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1374</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1375</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExprContext&nbsp;expr(int&nbsp;i)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1376</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;ExprContext&gt;(i);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1377</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1378</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IdContext&nbsp;id()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1379</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;GetRuleContext&lt;IdContext&gt;(0);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1380</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1381</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;PrimaryExprContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1382</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1383</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1384</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1385</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_primaryExpr;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1386</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1387</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1388</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterPrimaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1389</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1390</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1391</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1392</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitPrimaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1393</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1394</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1395</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1396</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitPrimaryExpr(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1397</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1398</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1399</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1400</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1401</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1402</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;PrimaryExprContext&nbsp;primaryExpr()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1403</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;PrimaryExprContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;PrimaryExprContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1404</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;26,&nbsp;RULE_primaryExpr);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1405</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;args&nbsp;=&nbsp;new&nbsp;List&lt;LogicalExpression&gt;();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1406</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;_la;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1407</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1408</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;272;</code></td></tr>
<tr title="4 of 5 branches are covered" data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1409</code></td><td class="branch coverage80">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(&nbsp;Interpreter.AdaptivePredict(_input,18,_ctx)&nbsp;)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1410</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1411</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1412</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>1413</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;245;&nbsp;Match(T__18);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>1414</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;246;&nbsp;_localctx._expr&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>1415</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;247;&nbsp;Match(T__4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1416</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._expr.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1417</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1418</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1419</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1420</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1421</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1422</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1338', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1338</td><td class="rightmargin right"><code>1423</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;250;&nbsp;_localctx._value&nbsp;=&nbsp;value();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1424</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._value.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1425</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1426</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1427</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1428</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1429</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1430</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '88', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">88</td><td class="rightmargin right"><code>1431</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;253;&nbsp;_localctx._id&nbsp;=&nbsp;id();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '88', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">88</td><td class="rightmargin right"><code>1432</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;254;&nbsp;Match(T__18);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '88', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">88</td><td class="rightmargin right"><code>1433</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;255;&nbsp;_localctx._expr&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1434</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.Add(_localctx._expr.retValue);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1435</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;263;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1436</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1437</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr title="2 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '112', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">112</td><td class="rightmargin right"><code>1438</code></td><td class="branch coverage100">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(_la==T__16)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1439</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1440</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '68', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">68</td><td class="rightmargin right"><code>1441</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;257;&nbsp;Match(T__16);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '68', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">68</td><td class="rightmargin right"><code>1442</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;258;&nbsp;_localctx._expr&nbsp;=&nbsp;expr();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1443</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args.Add(_localctx._expr.retValue);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1444</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1445</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1446</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;265;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1447</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Sync(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1448</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_la&nbsp;=&nbsp;_input.La(1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1449</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '88', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">88</td><td class="rightmargin right"><code>1450</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;266;&nbsp;Match(T__4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1451</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;FunctionExpression((IdentifierExpression)_localctx._id.retValue,&nbsp;args.ToArray());</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1452</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '44', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">44</td><td class="rightmargin right"><code>1453</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1454</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1455</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;4:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1456</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1457</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '68', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">68</td><td class="rightmargin right"><code>1458</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;269;&nbsp;_localctx._id&nbsp;=&nbsp;id();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1459</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;_localctx._id.retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1460</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1461</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1462</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1463</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1464</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1465</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1466</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1467</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1468</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1469</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1470</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1471</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1472</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '762', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">762</td><td class="rightmargin right"><code>1473</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1474</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1475</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;ValueContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1476</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1477</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_INTEGER;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1478</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_FLOAT;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1479</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_STRING;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1480</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_DATETIME;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1481</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;INTEGER()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.INTEGER,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1482</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;DATETIME()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.DATETIME,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1483</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;FALSE()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.FALSE,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1484</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;TRUE()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.TRUE,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1485</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;STRING()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.STRING,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1486</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;FLOAT()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.FLOAT,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1487</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ValueContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1488</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1489</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1490</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1491</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_value;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1492</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1493</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1494</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterValue(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1495</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1496</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1497</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1498</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitValue(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1499</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1500</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1501</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1502</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitValue(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1503</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1504</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1505</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1506</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1507</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1508</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;ValueContext&nbsp;value()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1509</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;ValueContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;ValueContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1510</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;28,&nbsp;RULE_value);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1511</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1512</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;286;</code></td></tr>
<tr title="6 of 10 branches are covered" data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1513</code></td><td class="branch coverage60">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(_input.La(1))&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1514</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;INTEGER:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '598', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">598</td><td class="rightmargin right"><code>1515</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '598', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">598</td><td class="rightmargin right"><code>1516</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1196', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1196</td><td class="rightmargin right"><code>1517</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;274;&nbsp;_localctx._INTEGER&nbsp;=&nbsp;Match(INTEGER);</code></td></tr>
<tr title="2 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '1800', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1800</td><td class="rightmargin right"><code>1518</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(int.Parse((_localctx._INTEGER!=null?_localctx._INTEGER.Text:null</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '598', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">598</td><td class="rightmargin right"><code>1519</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '598', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">598</td><td class="rightmargin right"><code>1520</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1521</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;FLOAT:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1522</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1523</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '30', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">30</td><td class="rightmargin right"><code>1524</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;276;&nbsp;_localctx._FLOAT&nbsp;=&nbsp;Match(FLOAT);</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1525</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(double.Parse((_localctx._FLOAT!=null?_localctx._FLOAT.Text:null),&nbsp;Num</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1526</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '15', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">15</td><td class="rightmargin right"><code>1527</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1528</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;STRING:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1529</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1530</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1531</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;278;&nbsp;_localctx._STRING&nbsp;=&nbsp;Match(STRING);</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1532</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(extractString((_localctx._STRING!=null?_localctx._STRING.Text:null)))</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1533</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1534</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1535</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;DATETIME:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>1536</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>1537</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '10', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">10</td><td class="rightmargin right"><code>1538</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;280;&nbsp;_localctx._DATETIME&nbsp;=&nbsp;Match(DATETIME);</code></td></tr>
<tr title="2 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>1539</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(DateTime.Parse((_localctx._DATETIME!=null?_localctx._DATETIME.Text:nu</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>1540</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '5', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">5</td><td class="rightmargin right"><code>1541</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1542</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;TRUE:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1543</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;5);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1544</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1545</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;282;&nbsp;Match(TRUE);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1546</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(true);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1547</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1548</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1549</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;FALSE:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1550</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;6);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1551</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '34', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">34</td><td class="rightmargin right"><code>1552</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;284;&nbsp;Match(FALSE);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1553</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;ValueExpression(false);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1554</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '17', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">17</td><td class="rightmargin right"><code>1555</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1556</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1557</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;NoViableAltException(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1558</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1559</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1560</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1561</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1562</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1563</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1564</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1565</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1566</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1567</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1568</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '669', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">669</td><td class="rightmargin right"><code>1569</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1570</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1571</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;public&nbsp;partial&nbsp;class&nbsp;IdContext&nbsp;:&nbsp;ParserRuleContext&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1572</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;LogicalExpression&nbsp;retValue;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1573</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_NAME;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1574</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IToken&nbsp;_VAR;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1575</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;VAR()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.VAR,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1576</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ITerminalNode&nbsp;NAME()&nbsp;{&nbsp;return&nbsp;GetToken(NCalc2Parser.NAME,&nbsp;0);&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1577</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IdContext(ParserRuleContext&nbsp;parent,&nbsp;int&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1578</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;base(parent,&nbsp;invokingState)</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1579</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1580</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1581</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;RuleIndex&nbsp;{&nbsp;get&nbsp;{&nbsp;return&nbsp;RULE_id;&nbsp;}&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1582</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;EnterRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1583</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1584</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.EnterId(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1585</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1586</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;void&nbsp;ExitRule(IParseTreeListener&nbsp;listener)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1587</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Listener&nbsp;typedListener&nbsp;=&nbsp;listener&nbsp;as&nbsp;INCalc2Listener;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1588</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedListener&nbsp;!=&nbsp;null)&nbsp;typedListener.ExitId(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1589</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1590</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;TResult&nbsp;Accept&lt;TResult&gt;(IParseTreeVisitor&lt;TResult&gt;&nbsp;visitor)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1591</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INCalc2Visitor&lt;TResult&gt;&nbsp;typedVisitor&nbsp;=&nbsp;visitor&nbsp;as&nbsp;INCalc2Visitor&lt;TResult&gt;;</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1592</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typedVisitor&nbsp;!=&nbsp;null)&nbsp;return&nbsp;typedVisitor.VisitId(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1593</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;return&nbsp;visitor.VisitChildren(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1594</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1595</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1596</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1597</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;[RuleVersion(0)]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1598</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;IdContext&nbsp;id()&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1599</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;IdContext&nbsp;_localctx&nbsp;=&nbsp;new&nbsp;IdContext(_ctx,&nbsp;State);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1600</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;EnterRule(_localctx,&nbsp;30,&nbsp;RULE_id);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1601</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1602</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;292;</code></td></tr>
<tr title="3 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1603</code></td><td class="branch coverage70">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(_input.La(1))&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1604</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;NAME:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '58', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">58</td><td class="rightmargin right"><code>1605</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;1);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '58', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">58</td><td class="rightmargin right"><code>1606</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '116', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">116</td><td class="rightmargin right"><code>1607</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;288;&nbsp;_localctx._NAME&nbsp;=&nbsp;Match(NAME);</code></td></tr>
<tr title="1 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '58', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">58</td><td class="rightmargin right"><code>1608</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;IdentifierExpression((_localctx._NAME!=null?_localctx._NAME.Text:null));</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '58', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">58</td><td class="rightmargin right"><code>1609</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '58', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">58</td><td class="rightmargin right"><code>1610</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1611</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;VAR:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1612</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EnterOuterAlt(_localctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1613</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '40', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">40</td><td class="rightmargin right"><code>1614</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;=&nbsp;290;&nbsp;_localctx._VAR&nbsp;=&nbsp;Match(VAR);</code></td></tr>
<tr title="2 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1615</code></td><td class="branch coverage50">&nbsp;</td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.retValue&nbsp;=&nbsp;&nbsp;new&nbsp;IdentifierExpression((_localctx._VAR!=null?_localctx._VAR.Text:null).Substring(1,&nbsp;(_l</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1616</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '20', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">20</td><td class="rightmargin right"><code>1617</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1618</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1619</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;NoViableAltException(this);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1620</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1621</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1622</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(RecognitionException&nbsp;re)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1623</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_localctx.exception&nbsp;=&nbsp;re;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1624</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.ReportError(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1625</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_errHandler.Recover(this,&nbsp;re);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1626</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1627</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;finally&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1628</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExitRule();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1629</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1630</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;_localctx;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '78', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">78</td><td class="rightmargin right"><code>1631</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1632</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1633</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;public&nbsp;override&nbsp;bool&nbsp;Sempred(RuleContext&nbsp;_localctx,&nbsp;int&nbsp;ruleIndex,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 11 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1634</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(ruleIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1635</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:&nbsp;return&nbsp;orExpr_sempred((OrExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1636</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1637</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:&nbsp;return&nbsp;andExpr_sempred((AndExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1638</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1639</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;4:&nbsp;return&nbsp;bitOrExpr_sempred((BitOrExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1640</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1641</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;5:&nbsp;return&nbsp;bitXorExpr_sempred((BitXorExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1642</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1643</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;6:&nbsp;return&nbsp;bitAndExpr_sempred((BitAndExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1644</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1645</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;7:&nbsp;return&nbsp;eqExpr_sempred((EqExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1646</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1647</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;8:&nbsp;return&nbsp;relExpr_sempred((RelExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1648</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1649</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;9:&nbsp;return&nbsp;shiftExpr_sempred((ShiftExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1650</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1651</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;10:&nbsp;return&nbsp;addExpr_sempred((AddExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1652</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1653</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;11:&nbsp;return&nbsp;multExpr_sempred((MultExprContext)_localctx,&nbsp;predIndex);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1654</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1655</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1656</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1657</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;bitOrExpr_sempred(BitOrExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1658</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1659</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1660</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1661</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1662</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1663</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;eqExpr_sempred(EqExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1664</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1665</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;5:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1666</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1667</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;6:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1668</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1669</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1670</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1671</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;addExpr_sempred(AddExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1672</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1673</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;13:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1674</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1675</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;14:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1676</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1677</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1678</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1679</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;orExpr_sempred(OrExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1680</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1681</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;0:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1682</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1683</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1684</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1685</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;bitAndExpr_sempred(BitAndExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1686</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1687</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;4:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1688</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1689</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1690</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1691</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;relExpr_sempred(RelExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 5 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1692</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1693</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;7:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;5);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1694</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1695</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;8:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1696</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1697</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;9:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1698</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1699</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;10:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1700</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1701</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1702</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1703</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;multExpr_sempred(MultExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 4 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1704</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1705</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;16:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1706</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1707</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;17:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1708</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1709</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;15:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;4);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1710</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1711</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1712</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1713</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;bitXorExpr_sempred(BitXorExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1714</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1715</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1716</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1717</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1718</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1719</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;andExpr_sempred(AndExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 2 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1720</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1721</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1722</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1723</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1724</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1725</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;private&nbsp;bool&nbsp;shiftExpr_sempred(ShiftExprContext&nbsp;_localctx,&nbsp;int&nbsp;predIndex)&nbsp;{</code></td></tr>
<tr title="0 of 3 branches are covered" data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1726</code></td><td class="branch coverage0">&nbsp;</td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(predIndex)&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1727</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;11:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;3);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1728</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1729</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;12:&nbsp;return&nbsp;Precpred(_ctx,&nbsp;2);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1730</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1731</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '0', 'LVS': 'red'}}"><td class="red">&nbsp;</td><td class="leftmargin rightmargin right">0</td><td class="rightmargin right"><code>1732</code></td><td></td><td class="lightred"><code>&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1733</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1734</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;static&nbsp;readonly&nbsp;string&nbsp;_serializedATN&nbsp;=</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1735</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3*\x129\x4\x2\t\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1736</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t\t&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1737</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10\t&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1738</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1739</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x5\x3\x31\n\x3\x3\x4\x3\x4\x3\x4\x3\x4&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1740</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\a\x4&lt;\n\x4\f\x4\xE\x4?\v\x4\x3\x5\x3\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1741</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\a\x5J\n\x5\f\x5\xE\x5M\v\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1742</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\a\x6X\n\x6\f\x6&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1743</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xE\x6[\v\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\a\a\x66\n\a&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1744</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\f\a\xE\ai\v\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\a\bt\n\b\f&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1745</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\b\xE\bw\v\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1746</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\t\x3\t\x3\t\a\t\x87\n\t\f\t\xE\t\x8A\v\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1747</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1748</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\n\x3\n\x3\n\x3\n\x3\n\a\n\xA4\n\n\f\n\xE\n\xA7\v\n\x3\v\x3\v\x3\v\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1749</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\a\v\xB7\n\v\f\v\xE&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1750</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\v\xBA\v\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1751</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\f\x3\f\a\f\xCA\n\f\f\f\xE\f\xCD\v\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1752</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\a\r&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1753</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xE2\n\r\f\r\xE\r\xE5\v\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1754</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x5\xE\xF6\n\xE\x3\xF\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1755</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1756</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\xF\x3\xF\x3\xF\a\xF\x108\n\xF\f\xF\xE\xF\x10B\v\xF\x3\xF\x3\xF\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1757</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xF\x3\xF\x3\xF\x3\xF\x5\xF\x113\n\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1758</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\x121\n\x10\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1759</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x11\x3\x11\x3\x11\x3\x11\x5\x11\x127\n\x11\x3\x11\x2\x2\f\x6\b\n\f\xE&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1760</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x10\x12\x14\x16\x18\x12\x2\x2\x4\x2\x6\x2\b\x2\n\x2\f\x2\xE\x2\x10\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1761</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x12\x2\x14\x2\x16\x2\x18\x2\x1A\x2\x1C\x2\x1E\x2&nbsp;\x2\x2\a\x4\x2\x5\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1762</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x18\x18\x4\x2\b\b\x1D\x1D\x4\x2\t\t\x14\x14\x4\x2\x4\x4\x1A\x1A\x4\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1763</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x19\x19\x1F\x1F\x138\x2\&quot;\x3\x2\x2\x2\x4\x30\x3\x2\x2\x2\x6\x32\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1764</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\b@\x3\x2\x2\x2\nN\x3\x2\x2\x2\f\\\x3\x2\x2\x2\xEj\x3\x2\x2\x2\x10&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1765</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;x\x3\x2\x2\x2\x12\x8B\x3\x2\x2\x2\x14\xA8\x3\x2\x2\x2\x16\xBB\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1766</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x18\xCE\x3\x2\x2\x2\x1A\xF5\x3\x2\x2\x2\x1C\x112\x3\x2\x2\x2\x1E\x120&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1767</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2&nbsp;\x126\x3\x2\x2\x2\&quot;#\x5\x4\x3\x2#$\a\x2\x2\x3$%\b\x2\x1\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1768</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;%\x3\x3\x2\x2\x2&amp;\&#39;\x5\x6\x4\x2\&#39;(\a\v\x2\x2()\x5\x4\x3\x2)*\a\x11\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1769</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2*+\x5\x4\x3\x2+,\b\x3\x1\x2,\x31\x3\x2\x2\x2-.\x5\x6\x4\x2./\b\x3\x1&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1770</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2/\x31\x3\x2\x2\x2\x30&amp;\x3\x2\x2\x2\x30-\x3\x2\x2\x2\x31\x5\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1771</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x32\x33\b\x4\x1\x2\x33\x34\x5\b\x5\x2\x34\x35\b\x4\x1\x2\x35=\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1772</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x36\x37\f\x4\x2\x2\x37\x38\t\x2\x2\x2\x38\x39\x5\b\x5\x2\x39:\b&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1773</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x4\x1\x2:&lt;\x3\x2\x2\x2;\x36\x3\x2\x2\x2&lt;?\x3\x2\x2\x2=;\x3\x2\x2\x2=&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1774</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;&gt;\x3\x2\x2\x2&gt;\a\x3\x2\x2\x2?=\x3\x2\x2\x2@\x41\b\x5\x1\x2\x41\x42\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1775</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\n\x6\x2\x42\x43\b\x5\x1\x2\x43K\x3\x2\x2\x2\x44\x45\f\x4\x2\x2\x45\x46&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1776</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\t\x3\x2\x2\x46G\x5\n\x6\x2GH\b\x5\x1\x2HJ\x3\x2\x2\x2I\x44\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1777</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;JM\x3\x2\x2\x2KI\x3\x2\x2\x2KL\x3\x2\x2\x2L\t\x3\x2\x2\x2MK\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1778</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;NO\b\x6\x1\x2OP\x5\f\a\x2PQ\b\x6\x1\x2QY\x3\x2\x2\x2RS\f\x4\x2\x2ST\a&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1779</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x15\x2\x2TU\x5\f\a\x2UV\b\x6\x1\x2VX\x3\x2\x2\x2WR\x3\x2\x2\x2X[\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1780</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2YW\x3\x2\x2\x2YZ\x3\x2\x2\x2Z\v\x3\x2\x2\x2[Y\x3\x2\x2\x2\\]\b\a&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1781</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x1\x2]^\x5\xE\b\x2^_\b\a\x1\x2_g\x3\x2\x2\x2`\x61\f\x4\x2\x2\x61\x62&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1782</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\a\n\x2\x2\x62\x63\x5\xE\b\x2\x63\x64\b\a\x1\x2\x64\x66\x3\x2\x2\x2\x65&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1783</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;`\x3\x2\x2\x2\x66i\x3\x2\x2\x2g\x65\x3\x2\x2\x2gh\x3\x2\x2\x2h\r\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1784</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2ig\x3\x2\x2\x2jk\b\b\x1\x2kl\x5\x10\t\x2lm\b\b\x1\x2mu\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1785</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2no\f\x4\x2\x2op\a\r\x2\x2pq\x5\x10\t\x2qr\b\b\x1\x2rt\x3\x2\x2\x2s&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1786</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;n\x3\x2\x2\x2tw\x3\x2\x2\x2us\x3\x2\x2\x2uv\x3\x2\x2\x2v\xF\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1787</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;wu\x3\x2\x2\x2xy\b\t\x1\x2yz\x5\x12\n\x2z{\b\t\x1\x2{\x88\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1788</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;|}\f\x5\x2\x2}~\t\x4\x2\x2~\x7F\x5\x12\n\x2\x7F\x80\b\t\x1\x2\x80\x87&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1789</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\x81\x82\f\x4\x2\x2\x82\x83\t\x5\x2\x2\x83\x84\x5\x12\n\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1790</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x84\x85\b\t\x1\x2\x85\x87\x3\x2\x2\x2\x86|\x3\x2\x2\x2\x86\x81\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1791</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x87\x8A\x3\x2\x2\x2\x88\x86\x3\x2\x2\x2\x88\x89\x3\x2\x2\x2\x89&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1792</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x11\x3\x2\x2\x2\x8A\x88\x3\x2\x2\x2\x8B\x8C\b\n\x1\x2\x8C\x8D\x5\x14&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1793</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\v\x2\x8D\x8E\b\n\x1\x2\x8E\xA5\x3\x2\x2\x2\x8F\x90\f\a\x2\x2\x90\x91&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1794</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\a\x13\x2\x2\x91\x92\x5\x14\v\x2\x92\x93\b\n\x1\x2\x93\xA4\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1795</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x94\x95\f\x6\x2\x2\x95\x96\a\f\x2\x2\x96\x97\x5\x14\v\x2\x97\x98\b\n&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1796</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x1\x2\x98\xA4\x3\x2\x2\x2\x99\x9A\f\x5\x2\x2\x9A\x9B\a\x17\x2\x2\x9B&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1797</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x9C\x5\x14\v\x2\x9C\x9D\b\n\x1\x2\x9D\xA4\x3\x2\x2\x2\x9E\x9F\f\x4\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1798</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x9F\xA0\a\x12\x2\x2\xA0\xA1\x5\x14\v\x2\xA1\xA2\b\n\x1\x2\xA2\xA4&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1799</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\xA3\x8F\x3\x2\x2\x2\xA3\x94\x3\x2\x2\x2\xA3\x99\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1800</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xA3\x9E\x3\x2\x2\x2\xA4\xA7\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2\xA5\xA6&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1801</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\xA6\x13\x3\x2\x2\x2\xA7\xA5\x3\x2\x2\x2\xA8\xA9\b\v\x1\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1802</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xA9\xAA\x5\x16\f\x2\xAA\xAB\b\v\x1\x2\xAB\xB8\x3\x2\x2\x2\xAC\xAD\f\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1803</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\xAD\xAE\a\a\x2\x2\xAE\xAF\x5\x16\f\x2\xAF\xB0\b\v\x1\x2\xB0\xB7&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1804</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\xB1\xB2\f\x4\x2\x2\xB2\xB3\a\x6\x2\x2\xB3\xB4\x5\x16\f\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1805</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xB4\xB5\b\v\x1\x2\xB5\xB7\x3\x2\x2\x2\xB6\xAC\x3\x2\x2\x2\xB6\xB1\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1806</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB8\xB9\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1807</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xB9\x15\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB\xBC\b\f\x1\x2\xBC\xBD\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1808</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x18\r\x2\xBD\xBE\b\f\x1\x2\xBE\xCB\x3\x2\x2\x2\xBF\xC0\f\x5\x2\x2\xC0&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1809</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xC1\a\x1E\x2\x2\xC1\xC2\x5\x18\r\x2\xC2\xC3\b\f\x1\x2\xC3\xCA\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1810</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xC4\xC5\f\x4\x2\x2\xC5\xC6\a&nbsp;\x2\x2\xC6\xC7\x5\x18\r\x2\xC7\xC8\b&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1811</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\f\x1\x2\xC8\xCA\x3\x2\x2\x2\xC9\xBF\x3\x2\x2\x2\xC9\xC4\x3\x2\x2\x2\xCA&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1812</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xCD\x3\x2\x2\x2\xCB\xC9\x3\x2\x2\x2\xCB\xCC\x3\x2\x2\x2\xCC\x17\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1813</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\xCD\xCB\x3\x2\x2\x2\xCE\xCF\b\r\x1\x2\xCF\xD0\x5\x1A\xE\x2\xD0&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1814</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xD1\b\r\x1\x2\xD1\xE3\x3\x2\x2\x2\xD2\xD3\f\x6\x2\x2\xD3\xD4\a\xF\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1815</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xD4\xD5\x5\x1A\xE\x2\xD5\xD6\b\r\x1\x2\xD6\xE2\x3\x2\x2\x2\xD7\xD8&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1816</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\f\x5\x2\x2\xD8\xD9\a\x3\x2\x2\xD9\xDA\x5\x1A\xE\x2\xDA\xDB\b\r\x1\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1817</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xDB\xE2\x3\x2\x2\x2\xDC\xDD\f\x4\x2\x2\xDD\xDE\a\x1B\x2\x2\xDE\xDF\x5&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1818</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x1A\xE\x2\xDF\xE0\b\r\x1\x2\xE0\xE2\x3\x2\x2\x2\xE1\xD2\x3\x2\x2\x2\xE1&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1819</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xD7\x3\x2\x2\x2\xE1\xDC\x3\x2\x2\x2\xE2\xE5\x3\x2\x2\x2\xE3\xE1\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1820</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\xE3\xE4\x3\x2\x2\x2\xE4\x19\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE6&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1821</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xE7\t\x6\x2\x2\xE7\xE8\x5\x1C\xF\x2\xE8\xE9\b\xE\x1\x2\xE9\xF6\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1822</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\xEA\xEB\a\x16\x2\x2\xEB\xEC\x5\x1C\xF\x2\xEC\xED\b\xE\x1\x2\xED&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1823</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xF6\x3\x2\x2\x2\xEE\xEF\a&nbsp;\x2\x2\xEF\xF0\x5\x1C\xF\x2\xF0\xF1\b\xE\x1&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1824</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xF1\xF6\x3\x2\x2\x2\xF2\xF3\x5\x1C\xF\x2\xF3\xF4\b\xE\x1\x2\xF4\xF6&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1825</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\xF5\xE6\x3\x2\x2\x2\xF5\xEA\x3\x2\x2\x2\xF5\xEE\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1826</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xF5\xF2\x3\x2\x2\x2\xF6\x1B\x3\x2\x2\x2\xF7\xF8\a\xE\x2\x2\xF8\xF9&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1827</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x5\x4\x3\x2\xF9\xFA\a\x1C\x2\x2\xFA\xFB\b\xF\x1\x2\xFB\x113\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1828</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\xFC\xFD\x5\x1E\x10\x2\xFD\xFE\b\xF\x1\x2\xFE\x113\x3\x2\x2\x2\xFF&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1829</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x100\x5&nbsp;\x11\x2\x100\x101\a\xE\x2\x2\x101\x102\x5\x4\x3\x2\x102\x109&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1830</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\b\xF\x1\x2\x103\x104\a\x10\x2\x2\x104\x105\x5\x4\x3\x2\x105\x106\b\xF&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1831</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x1\x2\x106\x108\x3\x2\x2\x2\x107\x103\x3\x2\x2\x2\x108\x10B\x3\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1832</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x109\x107\x3\x2\x2\x2\x109\x10A\x3\x2\x2\x2\x10A\x10C\x3\x2\x2\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1833</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x10B\x109\x3\x2\x2\x2\x10C\x10D\a\x1C\x2\x2\x10D\x10E\b\xF\x1\x2\x10E&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1834</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x113\x3\x2\x2\x2\x10F\x110\x5&nbsp;\x11\x2\x110\x111\b\xF\x1\x2\x111\x113&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1835</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x3\x2\x2\x2\x112\xF7\x3\x2\x2\x2\x112\xFC\x3\x2\x2\x2\x112\xFF\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1836</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x112\x10F\x3\x2\x2\x2\x113\x1D\x3\x2\x2\x2\x114\x115\a$\x2\x2\x115&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1837</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x121\b\x10\x1\x2\x116\x117\a(\x2\x2\x117\x121\b\x10\x1\x2\x118\x119\a&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1838</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;)\x2\x2\x119\x121\b\x10\x1\x2\x11A\x11B\a%\x2\x2\x11B\x121\b\x10\x1\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1839</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x11C\x11D\a!\x2\x2\x11D\x121\b\x10\x1\x2\x11E\x11F\a\&quot;\x2\x2\x11F\x121&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1840</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\b\x10\x1\x2\x120\x114\x3\x2\x2\x2\x120\x116\x3\x2\x2\x2\x120\x118\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1841</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x2\x120\x11A\x3\x2\x2\x2\x120\x11C\x3\x2\x2\x2\x120\x11E\x3\x2&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1842</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x121\x1F\x3\x2\x2\x2\x122\x123\a#\x2\x2\x123\x127\b\x11\x1\x2\x124&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1843</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x125\a&amp;\x2\x2\x125\x127\b\x11\x1\x2\x126\x122\x3\x2\x2\x2\x126\x124\x3&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1844</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\x2\x2\x2\x127!\x3\x2\x2\x2\x17\x30=KYgu\x86\x88\xA3\xA5\xB6\xB8\xC9\xCB&quot;+</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1845</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&quot;\xE1\xE3\xF5\x109\x112\x120\x126&quot;;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1846</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;public&nbsp;static&nbsp;readonly&nbsp;ATN&nbsp;_ATN&nbsp;=</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><code>1847</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;ATNDeserializer().Deserialize(_serializedATN.ToCharArray());</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1848</code></td><td></td><td class="lightgray"><code>}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><code>1849</code></td><td></td><td class="lightgray"><code>}&nbsp;//&nbsp;namespace&nbsp;NCalc2</code></td></tr>
</tbody>
</table>
<div class="footer">Generated by: ReportGenerator 2.1.4.0<br />02/04/2015 - 12:11:13<br /><a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div>
<script type="text/javascript" src="combined.js"></script>
</body></html>