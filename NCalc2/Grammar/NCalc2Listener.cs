//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\phmarques\Documents\GitHub\NCalc2\NCalc2\NCalc2.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace NCalc2.Grammar {

using System;
using System.Text;
using System.Globalization;
using System.Collections.Generic;
using NCalc2.Expressions;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="NCalc2Parser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface INCalc2Listener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] NCalc2Parser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] NCalc2Parser.OrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.multExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultExpr([NotNull] NCalc2Parser.MultExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.multExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultExpr([NotNull] NCalc2Parser.MultExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.bitXorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitXorExpr([NotNull] NCalc2Parser.BitXorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.bitXorExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitXorExpr([NotNull] NCalc2Parser.BitXorExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpr([NotNull] NCalc2Parser.ShiftExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.shiftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpr([NotNull] NCalc2Parser.ShiftExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.bitOrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitOrExpr([NotNull] NCalc2Parser.BitOrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.bitOrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitOrExpr([NotNull] NCalc2Parser.BitOrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.eqExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqExpr([NotNull] NCalc2Parser.EqExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.eqExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqExpr([NotNull] NCalc2Parser.EqExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] NCalc2Parser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] NCalc2Parser.UnaryExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpr([NotNull] NCalc2Parser.PrimaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpr([NotNull] NCalc2Parser.PrimaryExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpr([NotNull] NCalc2Parser.AddExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpr([NotNull] NCalc2Parser.AddExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] NCalc2Parser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] NCalc2Parser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] NCalc2Parser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] NCalc2Parser.IdContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.bitAndExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitAndExpr([NotNull] NCalc2Parser.BitAndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.bitAndExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitAndExpr([NotNull] NCalc2Parser.BitAndExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelExpr([NotNull] NCalc2Parser.RelExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelExpr([NotNull] NCalc2Parser.RelExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] NCalc2Parser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] NCalc2Parser.ValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.ncalc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNcalc([NotNull] NCalc2Parser.NcalcContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.ncalc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNcalc([NotNull] NCalc2Parser.NcalcContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="NCalc2Parser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] NCalc2Parser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NCalc2Parser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] NCalc2Parser.AndExprContext context);
}
} // namespace NCalc2.Grammar
